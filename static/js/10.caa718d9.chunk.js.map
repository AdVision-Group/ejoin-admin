{"version":3,"sources":["pages/ejoin-go-new-realisation/ejoin-go-new-realisation.styles.jsx","pages/ejoin-go-new-realisation/ejoin-go-new-realisation.page.jsx","components/custom-input/custom-input.styles.jsx","components/custom-input/custom-input.component.jsx"],"names":["FormContainer","styled","form","Header","div","ColContainer","RowContainer","CustomImageButton","theme","backgroundSecondary","ContentTextare","ReactQuill","CustomUndo","viewBox","className","points","d","CustomRedo","Size","Quill","import","whitelist","register","Font","modules","toolbar","container","handlers","undo","this","quill","history","redo","delay","maxStack","userOnly","formats","QuillToolbar","id","defaultValue","value","EjoinGoNewRealisation","useState","content","setContent","label","type","for","class","onChange","shrinkLabel","css","InputGroup","white","CustomInput","handleChange","name","otherProps","htmlFor","length"],"mappings":"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","file":"static/js/10.caa718d9.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport ReactQuill from 'react-quill';\n\nexport const FormContainer = styled.form`\n    padding: 0 3rem;\n`\n\nexport const Header = styled.div`\n    margin-bottom: 3rem;\n`\n\nexport const ColContainer = styled.div`\n\n`\n\nexport const RowContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 3rem;\n\n    ${ColContainer} {\n        &:nth-of-type(2) {\n            margin-top: 2rem;\n        }\n    }\n`\n\nexport const CustomImageButton = styled.div`\n    background-color: ${({ theme }) => theme.backgroundSecondary};\n    height: 30rem;\n    position: relative;\n    transition: background-color 0.2s ease-in-out;\n\n    &:hover {\n        background-color: #444444;\n    }\n\n    input[type=\"file\"] {\n        display: none;\n    }\n\n    label {\n        cursor: pointer;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        position: absolute;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n`\n\n\nexport const ContentTextare = styled(ReactQuill)`\n    height: 50rem;\n    background-color: ${({ theme }) => theme.backgroundSecondary};\n    /* color: var(--input-color); */\n    \n    .ql-container, .ql-toolbar {\n        border: none;\n    }\n`","import React, { useState } from 'react'\n\nimport CustomInput from '../../components/custom-input/custom-input.component'\nimport { Quill } from 'react-quill'\n\nimport {\n    FormContainer,\n    Header,\n    RowContainer,\n    ColContainer,\n    ContentTextare,\n    CustomImageButton\n} from './ejoin-go-new-realisation.styles'\n\nconst EjoinGoNewRealisation = () => {\n    const [content, setContent] = useState('')\n\n    return (\n        <FormContainer>\n            <Header>\n                <h1>Realizácie</h1>\n            </Header>\n            <RowContainer>\n                <ColContainer>\n                    <CustomInput\n                        label=\"Nadpis\"\n                        type='text'\n                    />\n                    <CustomImageButton>\n                        <label for=\"file-upload\" class=\"custom-file-upload\">\n                            Vybrať obrázok\n                        </label>\n                        <input id=\"file-upload\" type=\"file\" />\n                    </CustomImageButton>\n                </ColContainer>\n                <ColContainer>\n                    <QuillToolbar />\n                    <ContentTextare\n                        value={content}\n                        onChange={setContent}\n                        modules={modules}\n                        formats={formats}\n                    />\n                </ColContainer>\n            </RowContainer>\n        </FormContainer>\n    )\n}\n\n\nconst CustomUndo = () => (\n    <svg viewBox=\"0 0 18 18\">\n        <polygon className=\"ql-fill ql-stroke\" points=\"6 10 4 12 2 10 6 10\" />\n        <path\n            className=\"ql-stroke\"\n            d=\"M8.09,13.91A4.6,4.6,0,0,0,9,14,5,5,0,1,0,4,9\"\n        />\n    </svg>\n);\n\n// Redo button icon component for Quill editor\nconst CustomRedo = () => (\n    <svg viewBox=\"0 0 18 18\">\n        <polygon className=\"ql-fill ql-stroke\" points=\"12 10 14 12 16 10 12 10\" />\n        <path\n            className=\"ql-stroke\"\n            d=\"M9.91,13.91A4.6,4.6,0,0,1,9,14a5,5,0,1,1,5-5\"\n        />\n    </svg>\n);\n\n// Undo and redo functions for Custom Toolbar\nfunction undoChange() {\n    this.quill.history.undo();\n}\nfunction redoChange() {\n    this.quill.history.redo();\n}\n\n// Add sizes to whitelist and register them\nconst Size = Quill.import(\"formats/size\");\nSize.whitelist = [\"extra-small\", \"small\", \"medium\", \"large\"];\nQuill.register(Size, true);\n\n// Add fonts to whitelist and register them\nconst Font = Quill.import(\"formats/font\");\nFont.whitelist = [\n    \"arial\",\n    \"comic-sans\",\n    \"courier-new\",\n    \"georgia\",\n    \"helvetica\",\n    \"lucida\"\n];\nQuill.register(Font, true);\n\n// Modules object for setting up the Quill editor\nconst modules = {\n    toolbar: {\n        container: \"#toolbar\",\n        handlers: {\n            undo: undoChange,\n            redo: redoChange\n        }\n    },\n    history: {\n        delay: 500,\n        maxStack: 100,\n        userOnly: true\n    }\n};\n\n// Formats objects for setting up the Quill editor\nconst formats = [\n    \"header\",\n    \"font\",\n    \"size\",\n    \"bold\",\n    \"italic\",\n    \"underline\",\n    \"align\",\n    \"strike\",\n    \"script\",\n    \"blockquote\",\n    \"background\",\n    \"list\",\n    \"bullet\",\n    \"indent\",\n    \"link\",\n    \"image\",\n    \"color\",\n    \"code-block\"\n];\n\n// Quill Toolbar component\nconst QuillToolbar = () => (\n    <div id=\"toolbar\" className=\"toolbar\">\n        <span className=\"ql-formats\">\n            <select className=\"ql-size\" defaultValue=\"medium\">\n                <option value=\"extra-small\">Size 1</option>\n                <option value=\"small\">Size 2</option>\n                <option value=\"medium\">Size 3</option>\n                <option value=\"large\">Size 4</option>\n            </select>\n            <select className=\"ql-header\" defaultValue=\"3\">\n                <option value=\"1\">Heading</option>\n                <option value=\"2\">Subheading</option>\n                <option value=\"3\">Normal</option>\n            </select>\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-bold\" />\n            <button className=\"ql-italic\" />\n            <button className=\"ql-underline\" />\n            <button className=\"ql-strike\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-list\" value=\"ordered\" />\n            <button className=\"ql-list\" value=\"bullet\" />\n            <button className=\"ql-indent\" value=\"-1\" />\n            <button className=\"ql-indent\" value=\"+1\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-script\" value=\"super\" />\n            <button className=\"ql-script\" value=\"sub\" />\n            <button className=\"ql-blockquote\" />\n            <button className=\"ql-direction\" />\n        </span>\n        <span className=\"ql-formats\">\n            <select className=\"ql-align\" />\n            <select className=\"ql-color\" />\n            <select className=\"ql-background\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-link\" />\n            <button className=\"ql-image\" />\n            <button className=\"ql-video\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-formula\" />\n            <button className=\"ql-code-block\" />\n            <button className=\"ql-clean\" />\n        </span>\n        <span className=\"ql-formats\">\n            <button className=\"ql-undo\">\n                <CustomUndo />\n            </button>\n            <button className=\"ql-redo\">\n                <CustomRedo />\n            </button>\n        </span>\n    </div>\n);\n\nexport default EjoinGoNewRealisation\n","import styled, { css } from \"styled-components\"\n\nconst shrinkLabel = css`\n    left: .5rem;\n    top: -16px;\n    font-size: 12px;\n    transform: unset;\n    /* color: var(--input-color); */\n`\nexport const InputGroup = styled.div`\n    position: relative;\n    margin: 2rem 0 2rem;\n    .form-input {\n        background-color: #262626;\n        border: none;\n        padding: 1.5rem 2rem;\n        width: 100%;\n        height: 5rem;\n        border-radius: .8rem;\n        color: ${({ theme }) => theme.white};\n        &:focus {\n            outline: none;\n        }\n        &:focus ~ .form-input-label {\n            ${shrinkLabel}\n        }\n    }\n    input[type = 'password'] {\n        letter-spacing: 0.3em;\n    }\n    .form-input-label {\n        /* color: var(--input-color); */\n        font-size: 1.4rem;\n        font-weight: normal;\n        position: absolute;\n        pointer-events: none;\n        left: 2rem;\n        top: 1.5rem;\n        transition: 300ms ease all;\n        &.shrink {\n            ${shrinkLabel}\n        }\n    }\n    @media all and (max-width: 500px) {\n        .form-input {\n            font-size: 1.4rem;\n        }\n        /* padding: 1rem .5rem 1rem 2rem; */\n    }\n`","\nimport React from 'react'\n\nimport { InputGroup } from './custom-input.styles'\n\nconst CustomInput = ({ handleChange, label, name, ...otherProps }) => {\n    return (\n        <InputGroup>\n            <input\n                className='form-input'\n                name={name}\n                onChange={handleChange}\n                {...otherProps}\n            />\n            {label ? (\n                <label htmlFor={name} className={`${otherProps?.value?.length ? 'shrink' : ''} form-input-label`}>\n                    {label}\n                </label>\n            ) : null\n            }\n        </InputGroup>\n    )\n}\n\nexport default CustomInput"],"sourceRoot":""}